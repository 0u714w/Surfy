{"remainingRequest":"/home/doug/vue-surf-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/doug/vue-surf-app/src/components/WaveTypes.vue?vue&type=template&id=37494100&scoped=true","dependencies":[{"path":"/home/doug/vue-surf-app/src/components/WaveTypes.vue","mtime":1734671098486},{"path":"/home/doug/vue-surf-app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1734671234154},{"path":"/home/doug/vue-surf-app/node_modules/cache-loader/dist/cjs.js","mtime":1734671227554},{"path":"/home/doug/vue-surf-app/node_modules/vue-loader-v16/dist/index.js","mtime":1734671229830}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBpZD0id2F2ZS10eXBlcyI+CiAgICA8aDI+V2F2ZSBUeXBlczwvaDI+CiAgICA8dWw+CiAgICAgIDxsaSB2LWZvcj0id2F2ZSBpbiB3YXZlcyIgOmtleT0id2F2ZS5pZCI+CiAgICAgICAgPGltZyA6c3JjPSJ3YXZlLmljb24iIDphbHQ9IndhdmUubmFtZSIgLz4KICAgICAgICA8c3Bhbj57eyB3YXZlLm5hbWUgfX08L3NwYW4+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/doug/vue-surf-app/src/components/WaveTypes.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;MACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/doug/vue-surf-app/src/components/WaveTypes.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"wave-types\">\n    <h2>Wave Types</h2>\n    <ul>\n      <li v-for=\"wave in waves\" :key=\"wave.id\">\n        <img :src=\"wave.icon\" :alt=\"wave.name\" />\n        <span>{{ wave.name }}</span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      waves: []\n    };\n  },\n  created() {\n    fetch('/surf.json')\n      .then(response => response.json())\n      .then(data => {\n        this.waves = data.waveTypes;\n      })\n      .catch(error => {\n        console.error('Error fetching wave types:', error);\n      });\n  }\n};\n</script>\n\n<style scoped>\n#wave-types {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#wave-types ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n#wave-types li {\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n}\n\n#wave-types img {\n  width: 50px;\n  height: 50px;\n  margin-right: 10px;\n}\n</style>"]}]}